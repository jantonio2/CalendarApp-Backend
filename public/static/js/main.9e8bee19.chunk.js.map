{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","actions/events.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","token","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","events","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","moment","minutes","seconds","add","nowPlusOneHour","clone","initEvent","notes","start","toDate","end","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","modalOpen","ui","activeEvent","calendar","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","color","display","opacity","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","location","pathname","AppRouter","checking","exact","path","rootReducer","combineReducers","action","map","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e8bee19.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n  if (method === 'GET') {\r\n    return fetch(url);\r\n  } else {\r\n    return fetch (url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n  if (method === 'GET') {\r\n    return fetch(url, {\r\n      method,\r\n      headers:{\r\n        'x-token': localStorage.getItem('token') || ''\r\n      }\r\n    });\r\n  } else {\r\n    return fetch (url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'x-token': localStorage.getItem('token') || ''\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n};","export const types = {\r\n  uiOpenModal: '[ui] Open modal',\r\n  uiCloseModal: '[ui] Close modal',\r\n\r\n  eventSetActive: '[event] Set Active',\r\n  eventStartAddNew : '[event] Start add new',\r\n  eventAddNew: '[event] Add new',\r\n  eventClearActiveEvent: '[event] Clear active event',\r\n  eventUpdated: '[event] Event updated',\r\n  eventDeleted: '[event] Event deleted',\r\n  eventLoaded: '[event] Events loaded',\r\n  eventLogout: '[event] Event Logout',\r\n\r\n  authCheckingFinish: '[auth] Finish checking login state',\r\n  authStartLogin: '[auth] Start login',\r\n  authLogin: '[auth] Login',\r\n  authStartRegister: '[auth] Start register',\r\n  authStartTokenRenew: '[auth] Start token renew',\r\n  authLogout: '[auth] Logout'\r\n};","import Swal from 'sweetalert2';\r\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\r\nimport { types } from './../types/types';\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async( dispatch ) => {\r\n    const resp = await fetchWithoutToken('auth', { email, password}, 'POST');\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      dispatch( login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }) );\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  };\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n  return async( dispatch ) => {\r\n    const resp = await fetchWithoutToken('auth/new', {email, password, name}, 'POST');\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      dispatch( login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }) );\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  };\r\n};\r\n\r\nexport const startChecking = () => {\r\n  return async( dispatch ) => {\r\n    const resp = await fetchWithToken('auth/renew');\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      dispatch( login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }) );\r\n    } else {\r\n      dispatch(checkingFinish());\r\n    }\r\n  };\r\n};\r\n\r\nconst checkingFinish = () => ({\r\n  type: types.authCheckingFinish\r\n});\r\n\r\nconst login = ( user ) => ({\r\n  type: types.authLogin,\r\n  payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return ( dispatch ) => {\r\n    localStorage.clear();\r\n    dispatch( logout() );\r\n  };\r\n};\r\n\r\nconst logout = () => ({\r\n  type: types.authLogout\r\n});","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  \r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({target}) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value\r\n    })  \r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from './../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n    lEmail: 'antonio@gmail.com',\r\n    lPassword: '123456'\r\n  });\r\n\r\n  const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n    rName: 'Irene',\r\n    rEmail: 'irene@gmail.com',\r\n    rPassword1: '123456',\r\n    rPassword2: '123456'\r\n  });\r\n\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n  const { lEmail, lPassword } = formLoginValues;\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(startLogin(lEmail, lPassword));\r\n  };\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(rPassword1 !== rPassword2) {\r\n      return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n    }\r\n\r\n    dispatch(startRegister(rEmail, rPassword1, rName));\r\n  }\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={ handleLogin }>\r\n            <div className=\"form-group\">\r\n              <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"lEmail\"\r\n                value={ lEmail }\r\n                onChange={ handleLoginInputChange }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"lPassword\"\r\n                value={ lPassword }\r\n                onChange={ handleLoginInputChange }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input \r\n                type=\"submit\"\r\n                className=\"btnSubmit\"\r\n                value=\"Login\" \r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Registro</h3>\r\n          <form onSubmit={ handleRegister }>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name=\"rName\"\r\n                value={ rName }\r\n                onChange={ handleRegisterInputChange }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"rEmail\"\r\n                value={ rEmail }\r\n                onChange={ handleRegisterInputChange }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"rPassword1\"\r\n                value={ rPassword1 }\r\n                onChange={ handleRegisterInputChange } \r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name=\"rPassword2\"\r\n                value={ rPassword2 }\r\n                onChange={ handleRegisterInputChange } \r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input \r\n                type=\"submit\" \r\n                className=\"btnSubmit\" \r\n                value=\"Crear cuenta\" \r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import Swal from 'sweetalert2';\r\nimport { fetchWithToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n  return async( dispatch, getState ) => {\r\n\r\n    const { uid, name } = getState().auth;\r\n    \r\n    try {\r\n      const resp = await fetchWithToken('events', event, 'POST');\r\n      const body = await resp.json();\r\n\r\n      if(body.ok) {\r\n        event.id = body.evento.id;\r\n        event.user = {\r\n          _id: uid,\r\n          name: name\r\n        }\r\n        console.log(event);\r\n        dispatch( eventAddNew( event ) );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n  type: types.eventAddNew,\r\n  payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n  type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n  return async( dispatch ) => {\r\n    try {\r\n      const resp = await fetchWithToken(`events/${ event.id }`, event, 'PUT');\r\n      const body = await resp.json();\r\n\r\n      if(body.ok) {\r\n        dispatch( eventUpdated( event ) );\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n  type: types.eventUpdated,\r\n  payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n  return async( dispatch, getState ) => {\r\n    const { id } = getState().calendar.activeEvent;\r\n\r\n    try {\r\n      const resp = await fetchWithToken(`events/${ id }`, {}, 'DELETE');\r\n      const body = await resp.json();\r\n\r\n      if(body.ok) {\r\n        dispatch( eventDeleted() );\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventDeleted = () => ({\r\n  type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n  return async( dispatch ) => {\r\n    try {\r\n      const resp = await fetchWithToken('events');\r\n      const body = await resp.json();\r\n      const events = body.eventos;\r\n\r\n      dispatch( eventLoaded( events ) );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n  type: types.eventLoaded,\r\n  payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n  type: types.eventLogout\r\n});","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventLogout } from '../../actions/events';\r\n\r\nexport const Navbar = () => {\r\n  const { name } = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    dispatch( eventLogout() );\r\n    dispatch( startLogout() );\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">\r\n        { name }\r\n      </span>\r\n\r\n      <button \r\n        className=\"btn btn-outline-danger\"\r\n        onClick={ handleLogout }\r\n      >\r\n        <i className=\"fas fa-sign-out-alt\"></i>\r\n        <span> Salir</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export const messages = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n  \r\n  const {title, user} = event;\r\n  return (\r\n    <div>\r\n      <strong>{title}</strong>\r\n      <span> - {user.name}</span>  \r\n    </div>\r\n  );\r\n};\r\n","import { types } from './../types/types';\r\n\r\nexport const uiOpenModal = () => ({\r\n  type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n  type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlusOneHour = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlusOneHour.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowPlusOneHour.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n  const {title, notes, start, end} = formValues;\r\n  const dispatch = useDispatch();\r\n  const {modalOpen} = useSelector(state => state.ui);\r\n  const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n  useEffect(() => {\r\n    if(activeEvent){\r\n      setFormValues(activeEvent);\r\n    } else {\r\n      setFormValues(initEvent);\r\n    }\r\n  }, [activeEvent, setFormValues]);\r\n\r\n  const handleInputChange = ({target}) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActiveEvent());\r\n    setFormValues(initEvent);\r\n  };\r\n\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e\r\n    });\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n\r\n    if(momentStart.isSameOrAfter(momentEnd)){\r\n      return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n    }\r\n\r\n    if(title.trim().length < 2){\r\n      return setTitleValid(false); \r\n    }\r\n    //grabación en la base de datos\r\n    if(activeEvent){\r\n      dispatch(eventStartUpdate(formValues));\r\n    } else {\r\n      dispatch(eventStartAddNew( formValues ));\r\n    }\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1> {(activeEvent) ? \"Editar evento\" : \"Nuevo evento\"} </h1>\r\n      <hr />\r\n      <form \r\n        className=\"container\"\r\n        onSubmit={handleSubmitForm}\r\n      >\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={dateStart}\r\n            className=\"form-control\"\r\n            format=\"y-MM-dd h:mm:ss a\"\r\n            amPmAriaLabel=\"Select am/pm\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={dateEnd}\r\n            minDate={dateStart}\r\n            className=\"form-control\"\r\n            format=\"y-MM-dd h:mm:ss a\"\r\n            amPmAriaLabel=\"Select am/pm\"\r\n          />\r\n        </div>\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input \r\n            type=\"text\" \r\n            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea \r\n            type=\"text\" \r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary btn-block\"\r\n        >\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickNew = () => {\r\n    dispatch(eventClearActiveEvent());\r\n    dispatch(uiOpenModal());\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary fab\"\r\n      onClick={handleClickNew}\r\n    >\r\n      <i className=\"fas fa-plus\"></i>\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  // const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n  const handleDelete = () => {\r\n    dispatch(eventStartDelete());\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger fab-danger\"\r\n      onClick={handleDelete}\r\n    >\r\n      <i className=\"fas fa-trash\"></i>\r\n      <span> Borrar evento </span>\r\n    </button>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment) ;\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n  const dispatch = useDispatch();\r\n  const {events, activeEvent} = useSelector(state => state.calendar)\r\n  const { uid } = useSelector(state => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch( eventStartLoading() );\r\n  }, [dispatch]);\r\n\r\n  const onDoubleClick = (e) => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n\r\n  const onSelectEvent = (e) => {\r\n    dispatch(eventSetActive(e));\r\n  };\r\n  \r\n  const onViewChange = (e) => {\r\n    setLastView(e)\r\n    localStorage.setItem('lastView', e);\r\n  };\r\n\r\n  const onSelectSlot = (e) => {\r\n    dispatch(eventClearActiveEvent());\r\n  };\r\n\r\n  const eventStyleGetter = (event, start, end , isSelected) => {\r\n    \r\n    const style = {\r\n      backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n      borderRadius: '0px',\r\n      color: 'white',\r\n      display: 'block',\r\n      opacity: 0.8\r\n    };\r\n\r\n    return {\r\n      style\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={messages}\r\n        eventPropGetter={eventStyleGetter}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectEvent={onSelectEvent}\r\n        onView={onViewChange}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n        view= {lastView}\r\n        components={{\r\n          event: CalendarEvent\r\n        }}\r\n      />\r\n        <AddNewFab />\r\n\r\n        {\r\n          (activeEvent) && <DeleteEventFab />\r\n        }\r\n      <CalendarModal />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route {...rest} \r\n      component={ (props) => (\r\n        (!isAuthenticated)\r\n        ? <Component {...props} />\r\n        : <Redirect to=\"/\" />\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  // console.log(rest.location.pathname)\r\n  localStorage.setItem('lastPath', rest.location.pathname)\r\n  return (\r\n    <Route {...rest} \r\n      component={ (props) => (\r\n        (isAuthenticated)\r\n        ? <Component {...props} />\r\n        : <Redirect to=\"/login\" />\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector(state => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);\r\n\r\n  if (checking) {\r\n    return (<h5>Espere...</h5>);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <PublicRoute \r\n              exact \r\n              path=\"/login\" \r\n              component={LoginScreen}\r\n              isAuthenticated={ !!uid } \r\n            />          \r\n            <PrivateRoute \r\n              exact \r\n              path=\"/\" \r\n              component={CalendarScreen} \r\n              isAuthenticated={ !!uid }\r\n            />\r\n\r\n            <Redirect to=\"/\" />          \r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  checking: true,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n        ...action.payload\r\n      };\r\n\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false\r\n      };\r\n    \r\n    case types.authLogout:\r\n      return {\r\n        checking: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  };\r\n};","import { types } from '../types/types';\r\n\r\n// {\r\n//   id: new Date().getTime(),\r\n//   title: 'Cumpleaños del Bisho',\r\n//   start: moment().toDate(),\r\n//   end: moment().add(2, 'hours').toDate(),\r\n//   notes: 'Comprar Torta',\r\n//   user: {\r\n//     _id: '123',\r\n//     name: 'Antonio'\r\n//   }\r\n// }\r\n\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload\r\n      };\r\n    \r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload]\r\n      };\r\n\r\n    case types.eventClearActiveEvent:\r\n      return {\r\n        ...state,\r\n        activeEvent: null\r\n      };\r\n\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(\r\n          e => (e.id === action.payload.id) ? action.payload : e\r\n        )\r\n      };\r\n\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(\r\n          e => (e.id !== state.activeEvent.id)\r\n        ),\r\n        activeEvent: null\r\n      };\r\n\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [ ...action.payload ]\r\n      };  \r\n    \r\n    case types.eventLogout:\r\n      return {\r\n        ...initialState\r\n      };  \r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n  switch ( action.type ) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: true\r\n      };\r\n    case types.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  };\r\n};","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware( thunk )\r\n  )\r\n);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}